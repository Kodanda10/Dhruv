prompts = {
    "location": """
Extract locations from the following Hindi text, with character offsets.

Example 1: "‡§Ü‡§ú ‡§∞‡§æ‡§Ø‡§ó‡§¢‡§º ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§ï‡§æ‡§∞‡•ç‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Æ‡•Ä‡§ï‡•ç‡§∑‡§æ ‡§ï‡•Ä‡•§ #‡§µ‡§ø‡§ï‡§æ‡§∏"
Output: {"locations": [{"text": "‡§∞‡§æ‡§Ø‡§ó‡§¢‡§º", "start": 4, "end": 11}]}

Example 2: "‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§Æ‡•á‡§Ç ‡§¨‡•à‡§†‡§ï ‡§Æ‡•á‡§Ç ‡§∏‡§Æ‡•ç‡§Æ‡§ø‡§≤‡§ø‡§§ ‡§π‡•Å‡§Ü‡•§ @PMOIndia"
Output: {"locations": [{"text": "‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä", "start": 0, "end": 6}]}

Text: {text}
""",
    "theme": """
Extract themes or purposes from the following Hindi text, inferring implicit elements like "‡§Æ‡§æ‡§§‡§æ‡§ì‡§Ç-‡§¨‡§π‡§®‡•ã‡§Ç ‡§ï‡•ã" implies "‡§Æ‡§π‡§ø‡§≤‡§æ ‡§∏‡§∂‡§ï‡•ç‡§§‡§ø‡§ï‡§∞‡§£".

Example 1: "‡§Ü‡§ú ‡§∞‡§æ‡§Ø‡§ó‡§¢‡§º ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§ï‡§æ‡§∞‡•ç‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Æ‡•Ä‡§ï‡•ç‡§∑‡§æ ‡§ï‡•Ä‡•§ #‡§µ‡§ø‡§ï‡§æ‡§∏"
Output: {"themes": ["‡§µ‡§ø‡§ï‡§æ‡§∏"], "purpose": "review"}

Example 2: "‡§Æ‡§π‡§§‡§æ‡§∞‡•Ä ‡§µ‡§Ç‡§¶‡§® ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§ï‡•á ‡§≤‡§æ‡§≠‡§æ‡§∞‡•ç‡§•‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§∏‡§≤‡§æ‡§Æ‡•§"
Output: {"themes": ["‡§Æ‡§π‡§ø‡§≤‡§æ ‡§∏‡§∂‡§ï‡•ç‡§§‡§ø‡§ï‡§∞‡§£"], "purpose": "promote welfare"}

Text: {text}
""",
    "tags_activities": """
Extract hashtags (@mentions) and activities from the Hindi text, with offsets.

Example 1: "‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§Æ‡•á‡§Ç ‡§¨‡•à‡§†‡§ï ‡§Æ‡•á‡§Ç ‡§∏‡§Æ‡•ç‡§Æ‡§ø‡§≤‡§ø‡§§ ‡§π‡•Å‡§Ü‡•§ @PMOIndia"
Output: {"tags": [{"text": "@PMOIndia", "start": 25, "end": 35}], "activities": ["‡§¨‡•à‡§†‡§ï"]}

Example 2: "‡§ï‡•É‡§∑‡§ø ‡§∂‡•ã‡§ß ‡§ï‡•á‡§Ç‡§¶‡•ç‡§∞ ‡§ï‡§æ ‡§¶‡•å‡§∞‡§æ‡•§ #‡§ï‡•É‡§∑‡§ø"
Output: {"tags": [{"text": "#‡§ï‡•É‡§∑‡§ø", "start": 20, "end": 26}], "activities": ["‡§¶‡•å‡§∞‡§æ"]}

Text: {text}
""",
    "sentiment": """
Classify sentiment of the Hindi text: positive, negative, neutral.

Example 1: "‡§Ü‡§ú ‡§∞‡§æ‡§Ø‡§ó‡§¢‡§º ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§ï‡§æ‡§∞‡•ç‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Æ‡•Ä‡§ï‡•ç‡§∑‡§æ ‡§ï‡•Ä‡•§ #‡§µ‡§ø‡§ï‡§æ‡§∏"
Output: {"sentiment": "neutral"}

Example 2: "‡§∏‡•ç‡§µ‡§ö‡•ç‡§õ‡§§‡§æ ‡§Ö‡§≠‡§ø‡§Ø‡§æ‡§® ‡§Æ‡•á‡§Ç ‡§≠‡§æ‡§ó ‡§≤‡§ø‡§Ø‡§æ‡•§ #‡§∏‡•ç‡§µ‡§ö‡•ç‡§õ‡§§‡§æ"
Output: {"sentiment": "positive"}

Text: {text}
""",
    "purpose": """
Determine the purpose of the post: e.g., "promote", "condolence", "meet", "announce".

Example 1: "‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Ø ‡§∏‡•ç‡§µ‡§Ø‡§Ç ‡§∏‡•á‡§µ‡§ï ‡§∏‡§Ç‡§ò ‡§ï‡•á ‡§¶‡•á‡§µ‡§≤‡•ã‡§ï ‡§ó‡§Æ‡§® ‡§ï‡§æ ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞ ‡§Ö‡§§‡•ç‡§Ø‡§Ç‡§§ ‡§¶‡•Å‡§É‡§ñ‡§¶ ‡§π‡•à‡•§ @RSSorg"
Output: {"purpose": "condolence"}

Example 2: "‡§®‡§µ‡•ã‡§®‡•ç‡§Æ‡•á‡§∑ ‡§™‡•ç‡§∞‡§¶‡§∞‡•ç‡§∂‡§®‡•Ä ‡§ï‡§æ ‡§â‡§¶‡•ç‡§ò‡§æ‡§ü‡§®‡•§"
Output: {"purpose": "announce"}

Text: {text}
""",
    "schemes_events": """
Extract government schemes and events, inferring names.

Example 1: "‡§ú‡§®‡§ï‡§≤‡•ç‡§Ø‡§æ‡§£ ‡§Ø‡•ã‡§ú‡§®‡§æ‡§ì‡§Ç ‡§ï‡•Ä ‡§∏‡§Æ‡•Ä‡§ï‡•ç‡§∑‡§æ‡•§"
Output: {"schemes": ["‡§ú‡§®‡§ï‡§≤‡•ç‡§Ø‡§æ‡§£ ‡§Ø‡•ã‡§ú‡§®‡§æ"], "events": []}

Example 2: "‡§ö‡§ï‡•ç‡§∞‡§ß‡§∞ ‡§∏‡§Æ‡§æ‡§∞‡•ã‡§π ‡§ï‡•á ‡§™‡•ç‡§∞‡§∏‡•ç‡§§‡•Å‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§ù‡§≤‡§ï‡§ø‡§Ø‡§æ‡§Ç üìç ‡§∞‡§æ‡§Æ‡§≤‡•Ä‡§≤‡§æ ‡§Æ‡•à‡§¶‡§æ‡§®, ‡§∞‡§æ‡§Ø‡§ó‡§¢‡§º"
Output: {"schemes": [], "events": ["‡§ö‡§ï‡•ç‡§∞‡§ß‡§∞ ‡§∏‡§Æ‡§æ‡§∞‡•ã‡§π"]}

Text: {text}
"""
}
