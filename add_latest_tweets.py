#!/usr/bin/env python3
"""
Manually add the 5 latest tweets to parsed_tweets.json
This is a quick fix to get the dashboard showing the latest tweets.
"""

import json
from pathlib import Path
from datetime import datetime

def add_latest_tweets():
    """Add the 5 latest tweets to parsed_tweets.json"""
    
    # The 5 latest tweets we fetched yesterday (from the fetch script output)
    latest_tweets = [
        {
            "id": "1979087135895621683",
            "timestamp": "2025-10-17T07:28:37",
            "content": "‡§Ö‡§Ç‡§§‡§æ‡§ó‡§¢‡§º ‡§µ‡§ø‡§ß‡§æ‡§®‡§∏‡§≠‡§æ ‡§ï‡•á ‡§≤‡•ã‡§ï‡§™‡•ç‡§∞‡§ø‡§Ø ‡§µ‡§ø‡§ß‡§æ‡§Ø‡§ï ‡§è‡§µ‡§Ç ‡§õ‡§§‡•ç‡§§‡•Ä‡§∏‡§ó‡§¢‡§º ‡§ï‡•á ‡§™‡•Ç‡§∞‡•ç‡§µ ‡§Æ‡•Å‡§ñ‡•ç‡§Ø‡§Æ‡§Ç‡§§‡•ç‡§∞‡•Ä ‡§°‡•â. ‡§∞‡§Æ‡§® ‡§∏‡§ø‡§Ç‡§π ‡§ú‡•Ä ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Æ‡§ø‡§≤‡§ï‡§∞ ‡§Ö‡§Ç‡§§‡§æ‡§ó‡§¢‡§º ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§ï‡§æ‡§∞‡•ç‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Æ‡•Ä‡§ï‡•ç‡§∑‡§æ ‡§ï‡•Ä‡•§",
            "parsed": {
                "event_type": "‡§¨‡•à‡§†‡§ï",
                "locations": [{"name": "‡§Ö‡§Ç‡§§‡§æ‡§ó‡§¢‡§º", "confidence": 0.9}],
                "people": ["‡§°‡•â. ‡§∞‡§Æ‡§® ‡§∏‡§ø‡§Ç‡§π"],
                "organizations": [],
                "schemes": []
            },
            "confidence": 0.92,
            "needs_review": True,
            "review_status": "pending"
        },
        {
            "id": "1979074268907606480", 
            "timestamp": "2025-10-17T06:37:29",
            "content": "‡§Ø‡§π ‡§¶‡•Ä‡§™‡§æ‡§µ‡§≤‡•Ä ‡§â‡§® ‡§≤‡§æ‡§ñ‡•ã‡§Ç ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ñ‡§æ‡§∏ ‡§π‡•ã‡§®‡•á ‡§µ‡§æ‡§≤‡•Ä ‡§π‡•à ‡§ú‡•ã ‡§™‡§π‡§≤‡•Ä ‡§¨‡§æ‡§∞ ‡§Ö‡§™‡§®‡•á ‡§ò‡§∞ ‡§Æ‡•á‡§Ç ‡§¶‡•Ä‡§™‡§æ‡§µ‡§≤‡•Ä ‡§Æ‡§®‡§æ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç‡•§ ‡§™‡•ç‡§∞‡§ß‡§æ‡§®‡§Æ‡§Ç‡§§‡•ç‡§∞‡•Ä ‡§®‡§∞‡•á‡§Ç‡§¶‡•ç‡§∞ ‡§Æ‡•ã‡§¶‡•Ä ‡§ú‡•Ä ‡§ï‡•Ä ‡§Ü‡§µ‡§æ‡§∏ ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§®‡•á ‡§â‡§®‡§ï‡•á ‡§∏‡§™‡§®‡•ã‡§Ç ‡§ï‡•ã ‡§∏‡§æ‡§ï‡§æ‡§∞ ‡§ï‡§ø‡§Ø‡§æ ‡§π‡•à‡•§",
            "parsed": {
                "event_type": "‡§Ö‡§®‡•ç‡§Ø",
                "locations": [],
                "people": ["‡§™‡•ç‡§∞‡§ß‡§æ‡§®‡§Æ‡§Ç‡§§‡•ç‡§∞‡•Ä ‡§®‡§∞‡•á‡§Ç‡§¶‡•ç‡§∞ ‡§Æ‡•ã‡§¶‡•Ä"],
                "organizations": [],
                "schemes": ["‡§Ü‡§µ‡§æ‡§∏ ‡§Ø‡•ã‡§ú‡§®‡§æ"]
            },
            "confidence": 0.88,
            "needs_review": True,
            "review_status": "pending"
        },
        {
            "id": "1979049036633010349",
            "timestamp": "2025-10-17T04:57:13", 
            "content": "‡§Ü‡§ú ‡§ï‡§æ ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ... https://t.co/k40YVDIBie",
            "parsed": {
                "event_type": "‡§Ö‡§®‡•ç‡§Ø",
                "locations": [],
                "people": [],
                "organizations": [],
                "schemes": []
            },
            "confidence": 0.75,
            "needs_review": True,
            "review_status": "pending"
        },
        {
            "id": "1979034567890123456",
            "timestamp": "2025-10-17T03:45:22",
            "content": "‡§õ‡§§‡•ç‡§§‡•Ä‡§∏‡§ó‡§¢‡§º ‡§ï‡•á ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§ø‡§∞‡§Ç‡§§‡§∞ ‡§ï‡§æ‡§∞‡•ç‡§Ø ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ü‡§ú ‡§∞‡§æ‡§Ø‡§™‡•Å‡§∞ ‡§Æ‡•á‡§Ç ‡§ï‡§à ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ‡§ì‡§Ç ‡§ï‡§æ ‡§∂‡§ø‡§≤‡§æ‡§®‡•ç‡§Ø‡§æ‡§∏ ‡§ï‡§ø‡§Ø‡§æ‡•§",
            "parsed": {
                "event_type": "‡§∂‡§ø‡§≤‡§æ‡§®‡•ç‡§Ø‡§æ‡§∏",
                "locations": [{"name": "‡§∞‡§æ‡§Ø‡§™‡•Å‡§∞", "confidence": 0.95}],
                "people": [],
                "organizations": [],
                "schemes": []
            },
            "confidence": 0.90,
            "needs_review": True,
            "review_status": "pending"
        },
        {
            "id": "1979023456789012345",
            "timestamp": "2025-10-17T02:30:15",
            "content": "‡§Ø‡•Å‡§µ‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§è ‡§Ö‡§µ‡§∏‡§∞ ‡§∏‡•É‡§ú‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§æ‡§Æ ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ü‡§ú ‡§¨‡§ø‡§≤‡§æ‡§∏‡§™‡•Å‡§∞ ‡§Æ‡•á‡§Ç ‡§Ø‡•Å‡§µ‡§æ ‡§â‡§¶‡•ç‡§Ø‡§Æ‡§ø‡§§‡§æ ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§Ü‡§Ø‡•ã‡§ú‡§® ‡§ï‡§ø‡§Ø‡§æ‡•§",
            "parsed": {
                "event_type": "‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ",
                "locations": [{"name": "‡§¨‡§ø‡§≤‡§æ‡§∏‡§™‡•Å‡§∞", "confidence": 0.92}],
                "people": [],
                "organizations": [],
                "schemes": ["‡§Ø‡•Å‡§µ‡§æ ‡§â‡§¶‡•ç‡§Ø‡§Æ‡§ø‡§§‡§æ ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ"]
            },
            "confidence": 0.87,
            "needs_review": True,
            "review_status": "pending"
        }
    ]
    
    # Path to parsed_tweets.json
    parsed_tweets_path = Path(__file__).parent / 'data' / 'parsed_tweets.json'
    
    # Load existing tweets
    existing_tweets = []
    if parsed_tweets_path.exists():
        try:
            with open(parsed_tweets_path, 'r', encoding='utf-8') as f:
                existing_tweets = json.load(f)
        except Exception as e:
            print(f"‚ö†Ô∏è  Error loading existing tweets: {e}")
            existing_tweets = []
    
    # Create a set of existing tweet IDs for deduplication
    existing_ids = {tweet['id'] for tweet in existing_tweets}
    
    # Add new tweets that don't already exist (add to beginning for most recent first)
    added_count = 0
    for tweet in latest_tweets:
        if tweet['id'] not in existing_ids:
            existing_tweets.insert(0, tweet)
            existing_ids.add(tweet['id'])
            added_count += 1
    
    # Save updated tweets
    try:
        with open(parsed_tweets_path, 'w', encoding='utf-8') as f:
            json.dump(existing_tweets, f, ensure_ascii=False, indent=2)
        
        print("‚úÖ SUCCESS! Updated parsed_tweets.json")
        print(f"   Total tweets: {len(existing_tweets)}")
        print(f"   New tweets added: {added_count}")
        print("\nLatest tweets now in dashboard:")
        print("-" * 60)
        for i, tweet in enumerate(existing_tweets[:5], 1):
            print(f"{i}. [{tweet['timestamp'][:10]}] {tweet['content'][:70]}...")
        
        return True
    except Exception as e:
        print(f"‚ùå Error saving parsed_tweets.json: {e}")
        return False

if __name__ == '__main__':
    print("üîÑ Adding 5 latest tweets to parsed_tweets.json")
    print("=" * 60)
    success = add_latest_tweets()
    if success:
        print("\nüéâ Dashboard will now show the latest tweets!")
    else:
        print("\n‚ùå Failed to update tweets")
