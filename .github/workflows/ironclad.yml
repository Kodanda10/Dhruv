name: Ironclad CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  lint-type:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm ci
      - run: npm run lint
      - run: npm run typecheck

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm ci
      - run: npm test -- --ci --reporters=default --reporters=jest-junit

  coverage-gate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm ci
      - run: npm run test:coverage
      - name: Enforce coverage 95/70
        run: node ./scripts/enforce-coverage.js --lines 95 --branches 70

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Secret scan
        uses: trufflesecurity/trufflehog@main
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  licenses-sbom:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm ci
      - name: Generate SBOM
        run: npx @cyclonedx/cyclonedx-npm --output-file sbom.json
      - name: Scan licenses
        run: npx license-checker --summary --production

  web-a11y-perf:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm ci
      - run: npm run build
      - run: npm run start & npx wait-on http://localhost:3000
      - name: Lighthouse CI
        run: npx @lhci/cli@0.13.x autorun --collect.url=http://localhost:3000 --assert.preset=lighthouse:recommended
      - name: axe-core accessibility
        run: npx @axe-core/cli http://localhost:3000 --exit 1

  perf-k6:
    runs-on: ubuntu-latest
    env:
      BASE_URL: http://localhost:3000
      K6_SUMMARY_EXPORT: k6-summary.json
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm ci && npm run build
      - run: npm run start & npx wait-on http://localhost:3000/api/health
      - name: Run k6
        uses: grafana/k6-action@v0.3.1
        with:
          filename: perf/api-smoke.js
      - name: Enforce p95 budget (<=300ms)
        run: node ./scripts/assert-k6-p95.js --max 300 --summary k6-summary.json

  e2e-smoke:
    runs-on: ubuntu-latest
    needs: [lint-type, unit-tests, security]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm ci
      - run: npm run build
      - run: npx playwright install --with-deps
      - run: npm run start & npx wait-on http://localhost:3000
      - run: npm run e2e:smoke

  iac-validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm i -g vercel
      - run: vercel --version
      - run: vercel inspect || echo "Skip inspect without project linking"

  audit-trail:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Generate audit JSON
        run: node scripts/generate-audit.js
      - uses: actions/upload-artifact@v4
        with:
          name: audit-json
          path: audit.json
